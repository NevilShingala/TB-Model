# -*- coding: utf-8 -*-
"""PredictionTuberculosis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iHc3F3BWmVZsb0KHlJWMDqv9bZqVNWNw
"""

from google.colab import drive

drive.mount('/content/drive')

import tensorflow as tf 
from keras.layers import Input, Lambda, Dense, Flatten
from keras.models import Model
#from keras.applications.resnet50 import ResNet50
from PIL import Image, ImageChops
from keras.applications.vgg16 import VGG16
from keras.applications.vgg16 import preprocess_input
from keras.preprocessing import image
from keras.preprocessing.image import ImageDataGenerator
from keras.models import Sequential
import numpy as np
import glob
import matplotlib.pyplot as plt
import random

from keras.models import load_model

pred_path="/content/drive/MyDrive/ColabNotebooks/TB_Chest_Radiography_Database/Val"

model=load_model("/content/drive/MyDrive/ColabNotebooks/Trained_modelTB.h5")

Normal_list= []
Normal_list=glob.glob("/content/drive/MyDrive/ColabNotebooks/TB_Chest_Radiography_Database/Val/Normal/*.*")
Tuberculosis_list= glob.glob("/content/drive/MyDrive/ColabNotebooks/TB_Chest_Radiography_Database/Val/Tuberculosis/*.*")

Normal_list

# If 1 is t first place, it indicate that x-ray  is Normal.
# If 1 is in second place, it indicates that X-rays has signs of TB

Normal_list.extend(Tuberculosis_list)
random.shuffle(Normal_list)
Normal_list

L=len(Normal_list)
for i in range(0,L):
  img= image.load_img(Normal_list[i],target_size=(500,500))
  x=image.img_to_array(img)
  x= np.expand_dims(x, axis=0)
  img_data= preprocess_input(x)
  Result= model.predict(img_data)
  print(Result)